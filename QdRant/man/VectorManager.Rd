% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vector_manager.R
\docType{class}
\name{VectorManager}
\alias{VectorManager}
\title{VectorManager Class}
\format{
An R6 class object.
}
\description{
This class provides methods to manage vectors within a Qdrant collection. It allows
inserting vectors, searching vectors by similarity, and retrieving specific vectors by ID.
}
\section{Methods}{

\describe{
  \item{\code{initialize(client)}}{Creates a new VectorManager object with the given Qdrant client.}
  \item{\code{insert_vectors(collection_name, vectors_list)}}{Inserts a list of vectors into the specified collection. The input should be pre-formatted as a JSON list.}
  \item{\code{search_vectors(collection_name, vector, limit = 1, filter = NULL)}}{Searches for similar vectors in the collection based on the input vector.
  Returns the top \code{limit} results, optionally filtered by conditions.
  The \code{filter} argument can be used to specify conditions for filtering the search results, which should be provided in a JSON-like list format.
  For example, to filter results based on attributes, use:
  \code{filter = list(must = list(list(attribute_name = "value")),
                         should = list(list(attribute_name = "another_value")),
                         contains = list(list(attribute_name = "substring")))}.}
  \item{\code{get_vector(collection_name, id)}}{Retrieves a specific vector by its ID from the given collection.}
}
}

\examples{
# Assuming `client` is an instance of QdrantClient
vector_manager <- VectorManager$new(client)

# Insert vectors into a collection
vectors_list <- list(points = list(
  list(id = 1, vector = c(0.1, 0.2, 0.3), attributes = list(attribute_name = "value")),
  list(id = 2, vector = c(0.4, 0.5, 0.6), attributes = list(attribute_name = "another_value")),
  list(id = 3, vector = c(0.7, 0.8, 0.9), attributes = list(attribute_name = "substring"))
))
vector_manager$insert_vectors("example_collection", vectors_list)

# Search for similar vectors with a complex filter
search_results_filtered <- vector_manager$search_vectors("example_collection",
  c(0.1, 0.2, 0.3),
  limit = 5,
  filter = list(
    must = list(
      list(attribute_name = "value")  # Must have this exact attribute
    ),
    should = list(
      list(attribute_name = "another_value")  # Should match this attribute if possible
    ),
    contains = list(
      list(attribute_name = "sub")  # Contains this substring in the attribute
    )
  )
)

# Get a specific vector by ID
vector <- vector_manager$get_vector("example_collection", 1)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{client}}{An instance of the \code{QdrantClient} class used to make API requests.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-VectorManager-new}{\code{VectorManager$new()}}
\item \href{#method-VectorManager-insert_vectors}{\code{VectorManager$insert_vectors()}}
\item \href{#method-VectorManager-search_vectors}{\code{VectorManager$search_vectors()}}
\item \href{#method-VectorManager-get_vector}{\code{VectorManager$get_vector()}}
\item \href{#method-VectorManager-clone}{\code{VectorManager$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VectorManager-new"></a>}}
\if{latex}{\out{\hypertarget{method-VectorManager-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VectorManager$new(client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VectorManager-insert_vectors"></a>}}
\if{latex}{\out{\hypertarget{method-VectorManager-insert_vectors}{}}}
\subsection{Method \code{insert_vectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VectorManager$insert_vectors(collection_name, vectors_list)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VectorManager-search_vectors"></a>}}
\if{latex}{\out{\hypertarget{method-VectorManager-search_vectors}{}}}
\subsection{Method \code{search_vectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VectorManager$search_vectors(collection_name, vector, limit = 1, filter = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VectorManager-get_vector"></a>}}
\if{latex}{\out{\hypertarget{method-VectorManager-get_vector}{}}}
\subsection{Method \code{get_vector()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VectorManager$get_vector(collection_name, id)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VectorManager-clone"></a>}}
\if{latex}{\out{\hypertarget{method-VectorManager-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VectorManager$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
